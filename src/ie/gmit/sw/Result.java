package ie.gmit.sw;

/**
 * A class that implements the Resultable interface and its methods. A Result object should be added to a queue of
 * result objects when creating a multithread cypher breaker.
 * @author Ciaran Whyte
 * @version 1.0
 */
public class Result implements Resultable 
{
	private String plainText;
	private int key;
	private int score;
	
	/**
	 * Constructor for the Result class takes three arguments
	 * @param plainText Excepts the plain text after decryption has taken place
	 * @param key The key that was used to get the result shown in the plain text
	 * @param score The score that was generated for this text score generated by TextScorer.java
	 */
	public Result(String plainText, int key, int score) 
	{
		this.plainText = plainText;
		this.key = key;
		this.score = score;
	}
	
	/**
	 * @return Plain text that was decrypted in String format
	 */
	public String getPlainText() 
	{
		return plainText;
	}

	/**
	 * @param plainText Used to set what the decrypted text is
	 */
	public void setPlainText(String plainText) 
	{
		this.plainText = plainText;
	}

	/**
	 * @return The key that was used to decrypt the plain text in int format
	 */
	public int getKey() 
	{
		return key;
	}

	/**
	 * @param key Sets the key that was used to decrypt the resulting plain text
	 */
	public void setKey(int key) 
	{
		this.key = key;
	}

	/**
	 * Plain text is scored using TextScore.java and passed to this class. The score represents how English-like the 
	 * text is. 
	 * @return The score that was generated for the decrypted plain text 
	 */
	public int getScore() 
	{
		return score;
	}

	/**
	 * Plain text is scored using TextScore.java and passed to this class. The score represents how English-like the 
	 * text is. This method sets the score returned from TextScorer.java
	 * @param score The score that was generated for the decrypted plain text 
	 */
	public void setScore(int score) 
	{
		this.score = score;
	}
}
